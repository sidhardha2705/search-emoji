{"version":3,"sources":["components/emojiPanel.js","App.js","index.js"],"names":["EmojiPanel","useState","state","setState","value","setValue","useEffect","timeoutId","setTimeout","length","guessEmoji","console","log","clearTimeout","input","fetch","then","res","json","data","className","onChange","e","target","type","id","htmlFor","map","emoji","character","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEaA,EAAa,WACxB,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WAER,IAAMC,EAAYC,YAAW,WAC3BJ,EAAMK,OAAS,EAAIC,EAAWN,GAASO,QAAQC,IAAI,kBAClD,KACH,OAAO,kBAAMC,aAAaN,MACzB,CAACH,IAEJ,IAAMM,EAAa,SAACI,GAClBC,MAAM,uCAAD,OACoCD,EADpC,yDAGFE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUhB,EAASgB,OAS7B,OACE,sBAAKC,UAAU,qBAAf,UACE,uBACEA,UAAU,wBACVC,SAAU,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOnB,QACnCoB,KAAK,OACLC,GAAG,UAEL,uBAAOL,UAAU,qBAAqBM,QAAQ,QAA9C,4BAIM,OAALxB,QAAK,IAALA,OAAA,EAAAA,EAAOO,QAAS,EACf,qBAAKW,UAAU,mBAAf,SAlBGlB,EAAMyB,KAAI,SAACC,GAChB,OAAO,qBAAKR,UAAU,mBAAf,SAAmCQ,EAAMC,iBAkB5C,SC/BKC,MARf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,cAAC,EAAD,OCDNW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cef0fb97.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const EmojiPanel = () => {\r\n  const [state, setState] = useState(null);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    //Debounce funtionality for the search field (The search funtionality will trigger after 500ms when the user stops typing)\r\n    const timeoutId = setTimeout(() => {\r\n      value.length > 0 ? guessEmoji(value) : console.log(\"Start typing\");\r\n    }, 500);\r\n    return () => clearTimeout(timeoutId);\r\n  }, [value]);\r\n\r\n  const guessEmoji = (input) => {\r\n    fetch(\r\n      `https://emoji-api.com/emojis?search=${input}&access_key=399402abf7ab09e1554d82a83edcc0aa75fbdd7c`\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => setState(data));\r\n  };\r\n\r\n  const emojiMapper = () => {\r\n    return state.map((emoji) => {\r\n      return <div className=\"emoji__character\">{emoji.character}</div>;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-field col s6\">\r\n      <input\r\n        className=\"emoji__input validate\"\r\n        onChange={(e) => setValue(e.target.value)}\r\n        type=\"text\"\r\n        id=\"emoji\"\r\n      />\r\n      <label className=\"emoji__input-label\" htmlFor=\"emoji\">\r\n        Search emojis\r\n      </label>\r\n\r\n      {state?.length > 0 ? (\r\n        <div className=\"emoji__container\">{emojiMapper()}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiPanel;\r\n","import \"./App.css\";\nimport { EmojiPanel } from \"./components/emojiPanel\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EmojiPanel />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}